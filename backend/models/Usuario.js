const mongoose = require('mongoose');
const bcrypt = require('bcrypt');

const usuarioSchema = new mongoose.Schema({
  nombre: { type: String, required: true },
  correo: { type: String, required: true, unique: true },
  password: { type: String, required: true } // 游녣 Aseg칰rate de usar 'password'
});

// Middleware para hashear la contrase침a antes de guardar
usuarioSchema.pre('save', async function (next) {
  if (!this.isModified('password')) return next(); // Evita doble hash si ya est치 modificada

  try {
    const salt = await bcrypt.genSalt(10);
    this.password = await bcrypt.hash(this.password, salt); // Guarda como hash
    next();
  } catch (error) {
    next(error);
  }
});

// M칠todo para comparar contrase침a ingresada vs hash
usuarioSchema.methods.compararContrase침a = function (passwordIngresada) {
  return bcrypt.compare(passwordIngresada, this.password);
};

module.exports = mongoose.model('Usuario', usuarioSchema);



